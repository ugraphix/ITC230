

 <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react.js"></script>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.1/react-dom.js"></script>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js"></script>
    


    <div id="root"></div>
    
    <script type="text/babel">
    class CourseApp extends React.Component{
      constructor(props){
        // Pass props to parent class
        super(props);
          
     this.state = {
          data: {{{courses}}},
          filter: "", // search term 
          curItem: {} // current selected item 
        };
        this.onSearchChange = this.onSearchChange.bind(this);
        this.onClear = this.onClear.bind(this);
        this.onChange = this.onChange.bind(this);
        this.onSave = this.onSave.bind(this);    
      }
      
      
      
      
      
      
      
      
      
        onClear() {
        this.setState({curItem: {}});
      }
      
      // handle detail changes
      onChange(event) {
        var newItem = this.state.curItem;
       newItem[event.target.name] = event.target.value
        this.setState({curItem: newItem});
      }
      
       // search handler
      onSearchChange(event) {
                console.log(event)
                this.setState({filter: event.target.value.toLowerCase() });
            }//end onSearchChange 
        
    
      // show item details
      showDetails(event){
        // event.target is list item clicked
        console.log (event.target)
        let editItem = this.state.data.find((item) => {
          return item._id == event.target.id;
        });
        this.setState({curItem: editItem});
      }
      
      
      
      // Handle item save
      onSave() {
      console.log ("save")
        let newItem = this.state.curItem;
        if (!newItem.title) {
          return;
        }
        fetch("/api/v1/add/", {
          method: "POST",
        	headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(newItem)
        }).then(res => res.json())
        	.then((json) => {
          let newData;
          if (!newItem._id) { // add new item to array
            newData = this.state.data;
            newItem._id = json._id;
            newData.push(newItem);
          } else { // update existing item 
            newData = this.state.data.map((item) => {
              if (item._id === newItem._id) {
                item = newItem; 
              }
              return item;
            });          
          }
  
          // Update state with new array
          this.setState({data: newData});
        });
      }
      
      
      
      
        
        render() {
        // Render JSX
        return <div>
          <Title/>
          <SearchForm filter={this.state.filter} change={this.onSearchChange} />
          <ItemList
              items={this.state.data} 
              filter={this.state.filter}
              show={this.showDetails.bind(this)}
            />
             <ItemDetails item={this.state.curItem} change={this.onChange} />
        <button onClick={this.onSave}>Save</button>  <button onClick={this.onClear}>Reset</button> <button onClick={this.onDelete}>Delete</button>
          </div>;
      }

    }
    
    
    
    

          // UI elements
    const Title = () => {
        return (
        <div>
           <div>
              <h1>Courses List</h1>
           </div>
        </div>
        );
    }
    
    const ItemList = ({items, filter, show}) => {
      // return items that match search entry field, or all items if no entry
      const itemNodes = items.map((item) => {
        if (!filter || item.title.toLowerCase().includes(filter)) { 
          return <li id={item._id} key={item._id} onClick={show}>{item.course}</li>
        }
      });
      return <ul>{itemNodes}</ul>;
    }
    
     class ItemDetails extends React.Component {
    
      render() {
        return (
          <div>
            <h3>Details:</h3>
            <form onChange={this.props.change}>
              <input type="text" name="course" placeholder="course" value={this.props.item.course || ""} />
              <input type="text" name="teacher" placeholder="teacher" value={this.props.item.teacher || ""} />
              <input type="text" name="code" placeholder="code" value={this.props.item.code || ""} />
              <p/>
            </form>
          </div>
        );
      }      
    }
    
    
    
      class SearchForm extends React.Component {
      constructor(props) {
        super(props);
        this.handleChange = this.handleChange.bind(this);
      }
      
      handleChange (event) {
        this.handleChange(event.target.value)
      };
      
      
      render() {
        return (
          <div>
            <input
              type="text" placeholder="enter a search term"
              value={this.props.entry}
              onChange={this.handleChange}
            />
          </div>
        );
      }
    };
   
    
    
    

 ReactDOM.render(<CourseApp />, document.getElementById('root'));

    </script>




<title>School Page</title>



  


 
    
{{#each courses}}
<li><a href="/get?course={{course}}">{{course}}</a>, {{teacher}}, {{code}}</li>
    {{/each}}


    



 